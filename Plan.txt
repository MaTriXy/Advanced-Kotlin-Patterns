0. В Kotlin принято использовать тончайшие обёртки над тем, что уже написано.
1. (UI) Примеры использования Anko, в т. ч. в RecyclerView.ViewHolder. (не забыть сослаться на автора одной хорошей идеи)
2. (ФП) Переопределяем метод crossinline-функцией:
   Parcelable.Creator, AsyncTaskLoader, ClickableSpan, RecyclerView.Adapter и т. п. — в одну строку.
3. (ФП) Реактивный байндинг — однострочник для своевременного обновления UI.
7. Библиотека Kotpref — SharedPreferences через делегирование свойств.
4. Безопасная фабрика фрагментов — невозможно забыть передать аргументы.
6. Parcel-based навигация. Как URL-based, только типобезопасная.
5. (ООП) Делегирование варианта работы фрагмента. Долой switch/when!
8. Sealed-классы на практике: разные варианты схожих сущностей.
+ что-нибудь про валидацию форм, вкл/выкл кнопку и т. п.